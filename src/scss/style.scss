@use 'placeholders';
@use 'importer' as v;

.yellow {
    @extend %size100;
    background: red;
    @include v.d-flex(center);
}
.block {
    width: v.div(500px, 400px);
    height: v.div(600px, 400px);
    background: blue;
}
// всплывашка
.modal {
    display: none;
    position: fixed;
    z-index: 1;
    left: 0;
    top: 0;
    width: 100%;
    height: 100%;
    overflow: auto;
    background-color: rgba(0, 0, 0, 0.4);
  }
// -----------------------
:root {
  color-scheme: light dark;

}
$cursor-transform: translate3d(calc(var(--move-x) / -5), calc(var(--move-y) / -5), 0);

body {
  background-color: light-dark(v.$light-color, v.$dark-color);
}

.b-magic-list {
  font-size: calc(v.$index *2.75);
  padding: calc(v.$index *2.75);

  .magic-list {
    &__item {
      cursor: none;
      color: light-dark(v.$dark-color, v.$light-color);
      text-decoration: none;
      display: block;
      line-height: 0.9;
      padding: calc(v.$index * 3) calc(v.$index * 7.5);
      border-bottom: 1px solid light-dark(v.$dark-border, v.$light-border);
      transition: background-color v.$transition;
      counter-increment: my-counter;

      &:first-child {
        border-top: 1px solid light-dark(v.$dark-border, v.$light-border);
      }
      &:nth-child(even) {
        background-color: light-dark(v.$dark-step, v.$light-step);
      }
      &::before {
        content: '(' counter(my-counter, decimal-leading-zero) ')';
        position: absolute;
        margin-left: calc(v.$index * -2.25);
        margin-top: calc(v.$index / 2);
        font-size: calc(v.$index * .95);
        letter-spacing: 0.5px;
        transition: transform v.$transition;
        will-change: transform;
        transition-delay: 0.025s;
      }

      &:hover {
        background-color: light-dark(v.$dark-hover, v.$light-hover);

        &::before {
          transform: translate3d(calc(v.$index * -2.5), 0, 0);
        }

        .b-cursor {
          opacity: 1;
        }
        .b-item-bg {
          opacity: 0.1;
        }
        .magic-list__header {
          transform: translate3d(calc(v.$index * -2.5), 0, 0);
        }
        .cursor__image {
          // transform: $cursor-transform scale(1);
        }
      }
    }

    &__header {
      transition: transform v.$transition;
      will-change: transform;
      width: min-content;
    }
  }
}

.b-cursor {
  $width: calc(v.$index * 22);
  $height: calc(v.$index * 14);
  width: $width;
  height: $height;
  // background-color: white;
  position: fixed;
  opacity: 0;
  transform: translate3d(var(--move-x), var(--move-y), 0);
  top: calc($height * -0.5);
  left: calc($width * -0.5);
  transition: transform v.$transition-cursor, opacity 1s ease;
  will-change: transform;
  z-index: -1;
  border: 6.5px solid rgba(255, 255, 255, 0.3);
  border-image: linear-gradient(to right, #a830d5 0%, #3a4ed5 100%) 1;
  overflow: hidden;

  .cursor {
    &__image {
      position: relative;
      width: calc($width * 2);
      height: calc($height * 2);
      top: calc($height * -0.4);
      left: calc($width * -0.25);
      background-size: cover;
      background-position: center;
      // transform: $cursor-transform scale(1.5);
      transition: transform $cursor-transform;
      will-change: transform;
    }
  }
}
.b-item-bg {
  position: fixed;
  inset: 0;
  background-position: center;
  background-size: cover;
  z-index: -2;
  opacity: 0;
  transition: opacity .3s ease;
}